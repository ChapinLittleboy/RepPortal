@page "/"
@using Microsoft.AspNetCore.Components.Web
@namespace RepPortal.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="~/" />

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />

    <!-- Syncfusion CSS -->
    <link href="_content/Syncfusion.Blazor/styles/bootstrap5.css" rel="stylesheet" />

    <!-- Custom CSS -->
    <link href="css/custom.css" rel="stylesheet">
    <link href="css/site.css" rel="stylesheet" />
    <link href="RepPortal.styles.css" rel="stylesheet" />

    <!-- Favicon -->
    <link rel="icon" type="image/png" href="favicon.png" />

    <!-- Font Awesome -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">

    <!-- Blazor HeadOutlet -->
    <component type="typeof(HeadOutlet)" render-mode="ServerPrerendered" />
    <!--
    <script src="https://cdn.syncfusion.com/blazor/28.1.3/syncfusion-blazor.min.js" type="text/javascript"></script>  -->
</head>
<body>
    <!-- Blazor App -->
    <component type="typeof(App)" render-mode="ServerPrerendered" />

    <!-- Blazor Error UI -->
    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    <!-- Bootstrap JavaScript -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>

    <!-- Syncfusion JavaScript -->
    <script src="_content/Syncfusion.Blazor/scripts/syncfusion-blazor.min.js"></script> 

    <!-- Blazor Server Script -->
    <script src="_framework/blazor.server.js"></script>
    <script>
        window.downloadFileFromStream = async (fileName, contentStreamReference) => {
            const arrayBuffer = await contentStreamReference.arrayBuffer();
            const blob = new Blob([arrayBuffer]);
            const url = URL.createObjectURL(blob);
            const anchorElement = document.createElement('a');
            anchorElement.href = url;
            anchorElement.download = fileName ?? '';
            anchorElement.click();
            anchorElement.remove();
            URL.revokeObjectURL(url);
        }
    </script>
    <script src="downloadHelper.js"></script>
    <script type="text/javascript">
        function saveAsFile(filename, bytesBase64) {

            if (navigator.msSaveBlob) {
                //Download document in Edge browser
                var data = window.atob(bytesBase64);
                var bytes = new Uint8Array(data.length);
                for (var i = 0; i < data.length; i++) {
                    bytes[i] = data.charCodeAt(i);
                }
                var blob = new Blob([bytes.buffer], { type: "application/octet-stream" });
                navigator.msSaveBlob(blob, filename);
            }
            else {
                var link = document.createElement('a');
                link.download = filename;
                link.href = "data:application/octet-stream;base64," + bytesBase64;
                document.body.appendChild(link); // Needed for Firefox
                link.click();
                document.body.removeChild(link);
            }


        }
    </script>
    <script>
        function scrollToTopOfForm(formId, summaryId) {
            const summaryElement = document.getElementById(summaryId);
            if (summaryElement) {
                summaryElement.scrollIntoView({ behavior: 'smooth', block: 'start' });
            } else {
                const formElement = document.getElementById(formId);
                if (formElement) {
                    formElement.scrollIntoView({ behavior: 'smooth', block: 'start' });
                }
            }

            // Optional: Further adjust scroll position
            setTimeout(() => {
                window.scrollBy(0, -100);
            }, 300);
        }
    </script>
    <script>
        function scrollToTop() {

            window.scrollTo({ top: 0, behavior: 'smooth' });

        }
    </script>
    <script>
        Blazor.start({
            reconnectionOptions: {
                maxRetries: 5,
                retryIntervalMilliseconds: 2000
            }
        });
    </script>
	
    <script src="js/site.js"></script>
 
</body>
</html>
