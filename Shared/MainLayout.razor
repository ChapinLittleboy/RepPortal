@inherits LayoutComponentBase
@inject IHttpContextAccessor HttpContextAccessor
@inject ILogger<MainLayout> Logger 
@inject AuthenticationStateProvider AuthStateProvider
@inject IItemService ItemService


<PageTitle>RepPortal</PageTitle>

<div class="page">
  

	<main>

		<header>
			<Appbar />
		</header>

		<article class="content px-4">
			@Body
		</article>
	</main>
	
	<!-- Common footer -->
	<Footer></Footer>
	

</div>


@code {
    protected override void OnInitialized()
    {
        var user = HttpContextAccessor.HttpContext?.User;
        if (user?.Identity?.IsAuthenticated ?? false)
        {
            Logger.LogWarning("DIAGNOSTIC: User Authenticated in OnInitialized. Type: {AuthType}, Name: {Name}",
                user.Identity.AuthenticationType, user.Identity.Name);
        }
        else
        {
            Logger.LogWarning("DIAGNOSTIC: User NOT Authenticated in OnInitialized.");
            // You could also inspect request headers here if needed, e.g., for WWW-Authenticate
             var headers = HttpContextAccessor.HttpContext?.Request?.Headers;
        }
        AuthStateProvider.AuthenticationStateChanged += OnAuthChanged;
        base.OnInitialized();
    }

    private async void OnAuthChanged(Task<AuthenticationState> task)
    {
	    var state = await task;
	    if (state.User.Identity?.IsAuthenticated == true)
	    {
		    // load combo‑list once in background
		    _ = ItemService.GetItemsAsync();

		    // if you really want *all* details warmed:
		    //_ = Task.Run(async () => {
		    //    var all = await ItemService.GetItemsAsync();
		    //    foreach (var i in all)
		    //        await ItemService.GetItemDetailAsync(i.Item);
		    //});
	    }
    }

    public void Dispose()
	    => AuthStateProvider.AuthenticationStateChanged -= OnAuthChanged;

}